{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../constants';\nconst INITIAL_API_METADATA = {\n  ref: null,\n  isLoading: true\n};\nexport function useLatestAPI() {\n  _s();\n\n  const [apiMetadata, setApiMetadata] = useState(() => INITIAL_API_METADATA);\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getAPIMetadata() {\n      try {\n        setApiMetadata(INITIAL_API_METADATA);\n        const response = await fetch(API_BASE_URL, {\n          signal: controller.signal\n        });\n        const {\n          refs: [{\n            ref\n          } = {}] = []\n        } = await response.json();\n        setApiMetadata({\n          ref,\n          isLoading: false\n        });\n      } catch (err) {\n        setApiMetadata({\n          ref: null,\n          isLoading: false\n        });\n        console.error(err);\n      }\n    }\n\n    getAPIMetadata();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  return apiMetadata;\n}\n\n_s(useLatestAPI, \"wkcV9ho01lFrm84rQBf88yyLeEM=\");","map":{"version":3,"names":["useState","useEffect","API_BASE_URL","INITIAL_API_METADATA","ref","isLoading","useLatestAPI","apiMetadata","setApiMetadata","controller","AbortController","getAPIMetadata","response","fetch","signal","refs","json","err","console","error","abort"],"sources":["/Users/anthonypc/Documents/GitHub/ondemand-react-bootcamp/src/utils/hooks/useLatestAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../constants';\n\nconst INITIAL_API_METADATA = { ref: null, isLoading: true };\n\nexport function useLatestAPI() {\n  const [apiMetadata, setApiMetadata] = useState(() => INITIAL_API_METADATA);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getAPIMetadata() {\n      try {\n        setApiMetadata(INITIAL_API_METADATA);\n\n        const response = await fetch(API_BASE_URL, {\n          signal: controller.signal,\n        });\n        const { refs: [{ ref } = {}] = [] } = await response.json();\n\n        setApiMetadata({ ref, isLoading: false });\n      } catch (err) {\n        setApiMetadata({ ref: null, isLoading: false });\n        console.error(err);\n      }\n    }\n\n    getAPIMetadata();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return apiMetadata;\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,MAAMC,oBAAoB,GAAG;EAAEC,GAAG,EAAE,IAAP;EAAaC,SAAS,EAAE;AAAxB,CAA7B;AAEA,OAAO,SAASC,YAAT,GAAwB;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,MAAMG,oBAAP,CAA9C;EAEAF,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;IAEA,eAAeC,cAAf,GAAgC;MAC9B,IAAI;QACFH,cAAc,CAACL,oBAAD,CAAd;QAEA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACX,YAAD,EAAe;UACzCY,MAAM,EAAEL,UAAU,CAACK;QADsB,CAAf,CAA5B;QAGA,MAAM;UAAEC,IAAI,EAAE,CAAC;YAAEX;UAAF,IAAU,EAAX,IAAiB;QAAzB,IAAgC,MAAMQ,QAAQ,CAACI,IAAT,EAA5C;QAEAR,cAAc,CAAC;UAAEJ,GAAF;UAAOC,SAAS,EAAE;QAAlB,CAAD,CAAd;MACD,CATD,CASE,OAAOY,GAAP,EAAY;QACZT,cAAc,CAAC;UAAEJ,GAAG,EAAE,IAAP;UAAaC,SAAS,EAAE;QAAxB,CAAD,CAAd;QACAa,OAAO,CAACC,KAAR,CAAcF,GAAd;MACD;IACF;;IAEDN,cAAc;IAEd,OAAO,MAAM;MACXF,UAAU,CAACW,KAAX;IACD,CAFD;EAGD,CAxBQ,EAwBN,EAxBM,CAAT;EA0BA,OAAOb,WAAP;AACD;;GA9BeD,Y"},"metadata":{},"sourceType":"module"}